export class Modules{constructor(){this.registry={},this.componentRegistry={},this.componentLocations={},this.moduleLocations={}}async dispose(){await this.clear(),this.registry=null}async clear(){const t=Object.keys(this.registry);for(let s of t)delete this.registry[s]}async add(t,s){return this._addToRegistry(this.registry,t,s)}async addComponent(t,s){return this._addToRegistry(this.componentRegistry,t,s)}async addComponentLocation(t,s){return this._addToRegistry(this.componentLocations,t,s)}async addModuleLocation(t,s){return this._addToRegistry(this.moduleLocations,t,s)}async _addToRegistry(t,s,e){null==t[s]&&(t[s]=e)}async remove(t){delete this.registry[t]}async get(t){const s=document.body.dataset.appPath||"";let e=this.registry[t];if(null!=e)return"string"!=typeof e?e:(e=await import(`${s}${e}`),this.registry[t]=e);const a=t.split(":"),n=this.moduleLocations[a[0]];return null!=n?(e=await import(`${n}/${a[1]}.js`),this.registry[t]=e):void 0}async getComponent(t,s){let e=this.componentRegistry[t];if(null!=e){if("string"!=typeof e)return;return await this.loadComponentFromPath(t,e)}const a=this.componentLocations[s];null!=a&&await this.loadComponentFromPath(t,`${a}/${t}/${t}.js`)}async loadComponentFromPath(t,s){const e=document.body.dataset.appPath||"";this.componentRegistry[t]=await import(`${e}${s}`)}async getDefault(t){return(await this.get(t))?.default}async getConstant(t,s){return(await this.get(t))?.[s]}async getPrototype(t,s){return(await this.get(t))?.[s||t]}async getInstanceOf(t,s,...e){const a=await this.getPrototype(t,s||t);return a?new a(...e):null}async getInstanceOfDefault(t,...s){const e=await this.getDefault(t);return e?new e(...s):null}async call(t,s,e,...a){const n=(await this.get(t))?.[s||t];return await(n?.call(e,...a))}async callDefault(t,s,...e){const a=await this.getDefault(t);return await(a?.call(s,...e))}}globalThis.crs=globalThis.crs||{},globalThis.crs.modules=new Modules,globalThis.crs.modules.enableBinding=async t=>{for(let s of t||[])await globalThis.crs.modules.addComponent(s[0],s[1]);null!=globalThis.crsbinding&&(globalThis.crs.modules._parseElement=globalThis.crsbinding.parsers.parseElement,globalThis.crsbinding.parsers.parseElement=async(t,s,e)=>{await globalThis.crs.modules._parseElement(t,s,e),null!=t.dataset&&await globalThis.crs.modules.getComponent(t.nodeName.toLowerCase(),t.dataset?.module)})};